$call
neuralnet(formula = Output ~ Input, data = trainingdata, hidden = c(5, 
    3), threshold = 0.01)

$response
          Output
1  -0.8474102368
2  -0.2941411459
3  12.3933831845
4   1.1432998830
5 527.9144478313

$covariate
             [,1]
[1,] 0.4784761439
[2,] 1.3339793775
[3,] 2.6009505545
[4,] 1.6420326172
[5,] 8.1645280356

$model.list
$model.list$response
[1] "Output"

$model.list$variables
[1] "Input"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x0000000004bd7910>
<environment: 0x0000000015ea8f18>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x0000000005645eb8>
<environment: 0x0000000015ea8f18>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
         Input         Output
1 0.4784761439  -0.8474102368
2 1.3339793775  -0.2941411459
3 2.6009505545  12.3933831845
4 1.6420326172   1.1432998830
5 8.1645280356 527.9144478313

$net.result
$net.result[[1]]
              [,1]
1   0.001722104977
2   0.001722104977
3  12.393349204879
4   0.001722104977
5 527.914300633692


$weights
$weights[[1]]
$weights[[1]][[1]]
              [,1]         [,2]          [,3]          [,4]         [,5]
[1,] -11.256747772 -13.68235295 -10.935089500 -11.812184781 11.699636874
[2,]   4.332284191   4.88754492   3.817058398   4.420379668 -4.714191812

$weights[[1]][[2]]
             [,1]          [,2]          [,3]
[1,] -12.70295773 -15.266721186 -13.195321283
[2,]  17.36749294  17.446964696  18.564652971
[3,]  10.27150707   5.364258544  12.328411265
[4,]  10.42797000  15.128284161   7.898177841
[5,]  16.32136292  18.783113757  15.825276932
[6,] -34.19942606 -31.285804752 -31.779381969

$weights[[1]][[3]]
                 [,1]
[1,]   0.001722104977
[2,] 175.510729378650
[3,] 176.008967862770
[4,] 176.392881287295



$startweights
$startweights[[1]]
$startweights[[1]][[1]]
              [,1]         [,2]         [,3]         [,4]          [,5]
[1,] -0.4024186782 0.1555895000 1.1681064313 -1.130577696 1.13913869587
[2,]  1.8523571117 0.6912052485 0.7436842889  1.847765920 0.06043485538

$startweights[[1]][[2]]
              [,1]           [,2]          [,3]
[1,]  0.9610345935  1.95794978461 -1.3127845274
[2,]  0.9470560465 -0.57431083167  1.7940416688
[3,]  1.1948235388 -0.72125260662  0.9925332064
[4,]  1.8437772690  0.52252075412  0.1512119119
[5,] -0.3595712909 -0.03010964919 -0.4728551640
[6,] -0.6845318728  0.58730157098 -1.5244142248

$startweights[[1]][[3]]
               [,1]
[1,] -0.18417438572
[2,] -0.56402859438
[3,] -0.03935232981
[4,]  0.27994559049



$generalized.weights
$generalized.weights[[1]]
                          [,1]
1  0.0000000000000001189493999
2  0.0000000000000073016879906
3 -7.6933058487891781140888270
4  0.0000000000000694098945849
5  0.0000000000000000000000000


$result.matrix
                                      1
error                    1.055880321625
reached.threshold        0.007967815790
steps                 1815.000000000000
Intercept.to.1layhid1  -11.256747772340
Input.to.1layhid1        4.332284191178
Intercept.to.1layhid2  -13.682352950055
Input.to.1layhid2        4.887544920005
Intercept.to.1layhid3  -10.935089499776
Input.to.1layhid3        3.817058397559
Intercept.to.1layhid4  -11.812184780679
Input.to.1layhid4        4.420379667979
Intercept.to.1layhid5   11.699636873828
Input.to.1layhid5       -4.714191811673
Intercept.to.2layhid1  -12.702957728254
1layhid.1.to.2layhid1   17.367492943901
1layhid.2.to.2layhid1   10.271507069476
1layhid.3.to.2layhid1   10.427970000200
1layhid.4.to.2layhid1   16.321362918354
1layhid.5.to.2layhid1  -34.199426064786
Intercept.to.2layhid2  -15.266721186470
1layhid.1.to.2layhid2   17.446964695694
1layhid.2.to.2layhid2    5.364258544066
1layhid.3.to.2layhid2   15.128284161156
1layhid.4.to.2layhid2   18.783113757001
1layhid.5.to.2layhid2  -31.285804752137
Intercept.to.2layhid3  -13.195321283316
1layhid.1.to.2layhid3   18.564652970854
1layhid.2.to.2layhid3   12.328411264888
1layhid.3.to.2layhid3    7.898177840797
1layhid.4.to.2layhid3   15.825276932314
1layhid.5.to.2layhid3  -31.779381969327
Intercept.to.Output      0.001722104977
2layhid.1.to.Output    175.510729378650
2layhid.2.to.Output    176.008967862770
2layhid.3.to.Output    176.392881287295

attr(,"class")
[1] "nn"
> 
> 
> 
> #Plot the neural network
> 
> plot(net.myfunc)
> 
> 
> 
> #Test the neural network on some training data
> 
> testdata <- as.data.frame((2:20)*0.5) #Generate some numbers between 1 and 10
> 
> net.results <- compute(net.myfunc, testdata) #Run them through the neural network
> 
> 
> 
> #Lets see what properties net.myfunc has
> 
> ls(net.results)
[1] "net.result" "neurons"   
> 
> 
> 
> #Lets see the results
> 
> print(net.results$net.result)
                  [,1]
 [1,]   0.001722104977
 [2,]   0.001722104977
 [3,]   0.001722104977
 [4,]   0.003338344759
 [5,] 527.914300631502
 [6,] 527.914300633692
 [7,] 527.914300633692
 [8,] 527.914300633692
 [9,] 527.914300633692
[10,] 527.914300633692
[11,] 527.914300633692
[12,] 527.914300633692
[13,] 527.914300633692
[14,] 527.914300633692
[15,] 527.914300633692
[16,] 527.914300633692
[17,] 527.914300633692
[18,] 527.914300633692
[19,] 527.914300633692
> 
> 
> 
> #Lets display a better version of the results
> 
> cleanoutput <- cbind(testdata,sin(testdata)^cos(testdata),
+                      
+                      as.data.frame(net.results$net.result))
> 
> colnames(cleanoutput) <- c("Input","Expected Output","Neural Net Output")
> 
> print(cleanoutput)
   Input Expected Output Neural Net Output
1    1.0    0.9109582586    0.001722104977
2    1.5    0.9998225958    0.001722104977
3    2.0    1.0403617661    0.001722104977
4    2.5    1.5087588245    0.003338344759
5    3.0    6.9486576051  527.914300631502
6    3.5             NaN  527.914300633692
7    4.0             NaN  527.914300633692
8    4.5             NaN  527.914300633692
9    5.0             NaN  527.914300633692
10   5.5             NaN  527.914300633692
11   6.0             NaN  527.914300633692
12   6.5    0.2229997072  527.914300633692
13   7.0    0.7285434236  527.914300633692
14   7.5    0.9780577941  527.914300633692
15   8.0    1.0015578854  527.914300633692
16   8.5    1.1450801356  527.914300633692
17   9.0    2.2426681716  527.914300633692
18   9.5             NaN  527.914300633692
19  10.0             NaN  527.914300633692